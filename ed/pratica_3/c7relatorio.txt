1) O código parece tentar armazenar todos as letras do alfabeto, porém o último elemento da string terminal com barra 0. 
Temos que pensar sempre em um char a mais já que toda string termina com barra 0

2) O valgrind acusa que houve uma escrita inválida de tamanho 1
==85377== Memcheck, a memory error detector
==85377== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==85377== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==85377== Command: ./c7
==85377== 
==85377== Invalid write of size 1
==85377==    at 0x1091BC: main (c7.c:10)
==85377==  Address 0x4a5d05a is 0 bytes after a block of size 26 alloc'd
==85377==    at 0x4841853: calloc (vg_replace_malloc.c:1554)
==85377==    by 0x109183: main (c7.c:5)
==85377== 
==85377== 
==85377== HEAP SUMMARY:
==85377==     in use at exit: 0 bytes in 0 blocks
==85377==   total heap usage: 1 allocs, 1 frees, 26 bytes allocated
==85377== 
==85377== All heap blocks were freed -- no leaks are possible
==85377== 
==85377== For lists of detected and suppressed errors, rerun with: -s
==85377== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

3) Ao incrementar um número no malloc, ficando agora 27, o nenhum erro é mostrado
char* alphabet = calloc(27, sizeof(char));

4)
==85432== Memcheck, a memory error detector
==85432== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==85432== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==85432== Command: ./c7correto
==85432== 
==85432== 
==85432== HEAP SUMMARY:
==85432==     in use at exit: 0 bytes in 0 blocks
==85432==   total heap usage: 1 allocs, 1 frees, 27 bytes allocated
==85432== 
==85432== All heap blocks were freed -- no leaks are possible
==85432== 
==85432== For lists of detected and suppressed errors, rerun with: -s
==85432== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

