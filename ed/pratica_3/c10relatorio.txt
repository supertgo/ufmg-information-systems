1) O código gera inteiros longos infinitamente com malloc, falta free na parte final do bloco de while.
Além disso, é preciso determinar uma condição de parada.


2) Foi identificado um número muito grande de allocs e 0 frees
.........
.........
.........
222804160
222804352
222804544
222804736
^C==12460== 
==12460== Process terminating with default action of signal 2 (SIGINT)
==12460==    at 0x4976075: write (write.c:26)
==12460==    by 0x48F6E8C: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1181)
==12460==    by 0x48F8950: new_do_write (fileops.c:449)
==12460==    by 0x48F8950: _IO_new_do_write (fileops.c:426)
==12460==    by 0x48F8950: _IO_do_write@@GLIBC_2.2.5 (fileops.c:423)
==12460==    by 0x48F76B4: _IO_new_file_xsputn (fileops.c:1244)
==12460==    by 0x48F76B4: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1197)
==12460==    by 0x48DEFE5: __vfprintf_internal (vfprintf-internal.c:1719)
==12460==    by 0x48C9D3E: printf (printf.c:33)
==12460==    by 0x10919A: main (c10.c:10)
==12460== 
==12460== HEAP SUMMARY:
==12460==     in use at exit: 96,551,936 bytes in 754,305 blocks
==12460==   total heap usage: 754,305 allocs, 0 frees, 96,551,936 bytes allocated
==12460== 
==12460== 128 bytes in 1 blocks are possibly lost in loss record 2 of 4
==12460==    at 0x483C815: malloc (vg_replace_malloc.c:431)
==12460==    by 0x10917E: main (c10.c:9)
==12460== 
==12460== 96,550,656 bytes in 754,302 blocks are definitely lost in loss record 4 of 4
==12460==    at 0x483C815: malloc (vg_replace_malloc.c:431)
==12460==    by 0x10917E: main (c10.c:9)
==12460== 
==12460== LEAK SUMMARY:
==12460==    definitely lost: 96,550,656 bytes in 754,302 blocks
==12460==    indirectly lost: 0 bytes in 0 blocks
==12460==      possibly lost: 128 bytes in 1 blocks
==12460==    still reachable: 1,152 bytes in 2 blocks
==12460==         suppressed: 0 bytes in 0 blocks
==12460== Reachable blocks (those to which a pointer was found) are not shown.
==12460== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==12460== 
==12460== For lists of detected and suppressed errors, rerun with: -s

3) Ao determinar uma condição de parada com o break e liberando toda memória alocada, o programa é executado corretamente.


4) Após corrigir o erro, não foi identificado mais nenhum problema pelas ferramentas de análise
94007501447840
==12610== Memcheck, a memory error detector
==12610== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==12610== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==12610== Command: ./c10correto
==12610== 
77975616
==12610== 
==12610== HEAP SUMMARY:
==12610==     in use at exit: 0 bytes in 0 blocks
==12610==   total heap usage: 2 allocs, 2 frees, 1,152 bytes allocated
==12610== 
==12610== All heap blocks were freed -- no leaks are possible
==12610== 
==12610== For lists of detected and suppressed errors, rerun with: -s
==12610== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)






