1) O x não foi inicializado corretamente, porém o bloco dentro do if será executado.


2) O valgrind mostra realmente o bloco dentro do if é executado. Além disso, diz que a condição
(if) depende de valores não inicializados.

62053== Memcheck, a memory error detector
==62053== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==62053== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==62053== Command: ./c12correto
==62053== 
==62053== Conditional jump or move depends on uninitialised value(s)
==62053==    at 0x109159: main (c12correto.c:6)
==62053== 
X is zero==62053== 
==62053== HEAP SUMMARY:
==62053==     in use at exit: 0 bytes in 0 blocks
==62053==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==62053== 
==62053== All heap blocks were freed -- no leaks are possible
==62053== 
==62053== Use --track-origins=yes to see where uninitialised values come from
==62053== For lists of detected and suppressed errors, rerun with: -s
==62053== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

3) Ao atribuir 0 durante a inicialização da variável, o código agora é executado corretamente.
Sem erros como podemos ver no item 4.

4)==62295== Memcheck, a memory error detector
==62295== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==62295== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==62295== Command: ./c12correto
==62295== 
X is zero==62295== 
==62295== HEAP SUMMARY:
==62295==     in use at exit: 0 bytes in 0 blocks
==62295==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==62295== 
==62295== All heap blocks were freed -- no leaks are possible
==62295== 
==62295== For lists of detected and suppressed errors, rerun with: -s
==62295== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

